<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonAccount.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CSzI34I1NPwPqzACvnupAScAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>28</value>
  </metadata>
</root>